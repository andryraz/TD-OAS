openapi: 3.0.0
info:
  title: API Library
  version: 1.0.0
  description: API to manage a library's books and authors
paths:
  /books:
    get:
      summary: Retrieve  list
      parameters:
        - name: bookName
          in: query
          description: Book name
          schema:
            type: string
        - name: releaseDate
          in: query
          description: Publication date range (ISO 8601 format)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: create a new book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book successfully created
    put:
      summary: update a book
      parameters:
        - name: id
          in: path
          required: true
          description: book id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book successfully updated
    delete:
      summary: delete a book
      parameters:
        - name: id
          in: path
          required: true
          description: book id
          schema:
            type: integer
      responses:
        '204':
          description: Book successfully deleted
  /authors:
    get:
      summary: Retrieve the list of authors
      parameters:
        - name: authorName
          in: query
          description: Name of author
          schema:
            type: string
      responses:
        '200':
          description: list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      summary: Create a new author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author successfully created
    put:
      summary: Update an author
      parameters:
        - name: id
          in: path
          required: true
          description: Author ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author successfully updated
    delete:
      summary: Remove an author
      parameters:
        - name: id
          in: path
          required: true
          description: Author ID
          schema:
            type: integer
      responses:
        '204':
          description: Author successfully removed 
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum: [ROMANCE, COMEDY]
        releaseDate:
          type: string
          format: date-time 1 
    Author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sexe:
          type: string
          enum: [M, F]
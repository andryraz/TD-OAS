openapi: 3.0.0
info:
  title: API School
  version: 1.0.0
  description: API to manage a student school
servers:
  - url: http://localhost:8080
paths:
  /groups:
    get:
      summary: Retrieve group list
      parameters:
        - name: groupName
          in: query
          description: Group name
          schema:
            type: string
        - name: groupYear
          in: query
          description: Publication year range (format: yyyy-yyyy)
          schema:
            type: string
      responses:
        '200':
          description: GroupName
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/group'
    post:
      summary: create a new Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '201':
          description: Group successfully created
    put:
      summary: update a group
      parameters:
        - name: id
          in: path
          required: true
          description: book id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '200':
          description: Group successfully updated
    delete:
      summary: delete a group
      parameters:
        - name: id
          in: path
          required: true
          description: group id
          schema:
            type: integer
      responses:
        '204':
          description: Group successfully deleted
  /students:
    get:
      summary: Retrieve the list of students
      parameters:
        - name: studentName
          in: query
          description: Name of student
          schema:
            type: string
      responses:
        '200':
          description: list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/student'
    post:
      summary: Create a new student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '201':
          description: Student successfully created
    put:
      summary: Update an student
      parameters:
        - name: id
          in: path
          required: true
          description: student ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: student successfully updated
    delete:
      summary: Remove an student
      parameters:
        - name: id
          in: path
          required: true
          description: Student ID
          schema:
            type: integer
      responses:
        '204':
          description: Student successfully removed 
components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
        groupName:
          type: string
        promotion:
          type: string
          enum: [G, H, J, K]
        studentNb:
          type: integer
        groupYear:
          type: string
        students:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    Student:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sexe:
          type: string
          enum: [M, F]
        birthdate:
          type: string
          format: date
        reference:
          type: integer
        group:
          type: string